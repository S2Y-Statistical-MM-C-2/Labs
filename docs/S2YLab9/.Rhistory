library(PASWR)
data("HSwrestler")
pairs(HSwrestler)
model.all <- lm(HWFAT ~ . , data = HSwrestler[,c(-8,-9)])
summary(model.all) # Take note of which are least significant
# Perform test
drop1(model.all, test = "F") # single term deletions
mod.hsw <- update(model.all, . ~ . - HT)
drop1(mod.hsw, test = "F")
drop1(mod.hsw, test = "F")
mod.hsw <- update(model.hsw, . ~ . - SUBSCAP)
drop1(mod.hsw, test = "F")
drop1(mod.hsw, test = "F")
mod.hsw <- update(mod.hsw, . ~ . - SUBSCAP)
drop1(mod.hsw, test = "F")
drop1(mod.hsw, test = "F")
mod.hsw <- update(mod.hsw, . ~ . - WT)
drop1(mod.hsw, test = "F")
# We define SCOPE - an object to help us keep track of the variables we can add
SCOPE <- (~ . + AGE + HT + WT + ABS + TRICEPS + SUBSCAP)
# Fit initial model
mod.fs <- lm(HWFAT ~ 1, data = HSwrestler)
summary(mod.fs)
# Perform test
add1(mod.fs, scope = SCOPE, test = "F")
# Add the predictor
mod.fs <- update(mod.fs, . ~ . + ABS)
summary(mod.fs)
add1(mod.fs, scope = SCOPE, test = "F")
summary(mod.fs)
add1(mod.fs, scope = SCOPE, test = "F")
mod.fs <- update(mod.fs, . ~ . + TRICEPS)
add1(mod.fs, scope = SCOPE, test = "F")
mod.fs <- update(mod.fs, . ~ . + AGE)
add1(mod.fs, scope = SCOPE, test = "F")
lakes <- read.csv("lakes.csv")
library(leaps)
mod.lm <- lm(ltotalbio ~., data = lakes)
summary(mod.lm)$adjr2
library(leaps)
mod.lm <- regsubsets(ltotalbio ~., data = lakes)
summary(mod.lm)$adjr2
library(leaps)
mod.lm <- regsubsets(ltotalbio ~., data = lakes)
R2adj <- summary(mod.lm)$adjr2
R2adj <-
library(leaps)
mod.lm <- regsubsets(ltotalbio ~., data = lakes)
R2adj <- summary(mod.lm)$adjr2
R2adj
summary(mod.lm)
which.max(R2ajd)
which.max(R2adj)
plot(mod.lm,adjr2)
summary(mod.lm)$aic
summary(mod.lm)$cp
